@using Microsoft.AspNetCore.Components.Authorization;
@using PetProject.Models;
@using PetProject.Services;
@using System.Security.Claims;
@using Microsoft.AspNetCore.Identity;
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserManager<AppUser> UserManager
@inject ApplicationDbService DbService

<CascadingAuthenticationState>
    <div class="card">
        <AuthorizeView>
            <Authorized>
                <button @onclick="(e => Reroll())">Reroll</button>
            </Authorized>
        </AuthorizeView>
        <div class="card-columns">

            @foreach (var fighter in DbService.RandomFighters().ToList())
            {
                <div class="card">
                    <div class="card-body">
                        <h3 class="card-text">@fighter.Name</h3>
                    </div>
                    <img class="card-img-top" src="@fighter.Image" alt="@fighter.Name" style="height:100%">
                    <div class="card-text">
                        <p>
                            @fighter.Level
                        </p>
                        <p>
                            @fighter.Price
                        </p>
                    </div>
                    <AuthorizeView>
                        <Authorized>
                            <button @onclick="(e => Buy(fighter)">Buy</button>
                            @context.User.Identity.Name
                        </Authorized>
                    </AuthorizeView>
                </div>
            }
        </div>
    </div>
</CascadingAuthenticationState>

@code {

    List<Fighter> fighters;

    void Reroll()
    {

    }

    void Buy(Fighter fighter)
    {
        
    }
}
